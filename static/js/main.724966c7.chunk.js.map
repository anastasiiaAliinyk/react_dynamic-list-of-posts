{"version":3,"sources":["api/api.js","api/users.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","url","options","a","fetch","response","ok","Error","json","body","data","getUsers","sort","previous","next","id","slice","getPosts","getUserPosts","userId","posts","filter","post","getComments","postId","comments","comment","saveComment","method","headers","JSON","stringify","deleteComment","commentId","PostsList","onOpen","onClose","selectedId","useState","setPosts","useEffect","then","className","map","key","title","type","onClick","defaultProps","NewCommentForm","state","name","email","handleOnChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","placeholder","onChange","required","React","Component","PostDetails","setPost","setComments","isVisibleComment","setIsVisibleComment","getPostDetails","length","newComment","App","users","setUsers","selectedUserId","setSelectedUserId","selectedPostId","setSelectedPostId","classNames","user","Number","ReactDOM","render","document","getElementById"],"mappings":"sYAEaA,EAAO,uCAAG,WAAMC,EAAKC,GAAX,iBAAAC,EAAA,sEACEC,MAAM,GAAD,OAHN,kCAGM,OAAeH,GAAOC,GAD7B,WACfG,EADe,QAGPC,GAHO,sBAIb,IAAIC,MAAJ,8BAAiCN,IAJpB,uBAOFI,EAASG,OAPP,cAOfC,EAPe,yBASdA,EAAKC,MAAQD,GATC,2CAAH,wDCAPE,EAAQ,uCAAG,sBAAAR,EAAA,sEACfH,EAAQ,UADO,uCAEnBY,MAAK,SAACC,EAAUC,GAAX,OAAoBD,EAASE,GAAKD,EAAKC,MAC5CC,MAAM,EAAG,IAHU,2CAAH,qDCARC,G,MAAW,kBAAMjB,EAAQ,YAEzBkB,EAAY,uCAAG,WAAMC,GAAN,eAAAhB,EAAA,sEACNc,IADM,cACpBG,EADoB,yBAGnBA,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKH,SAAWA,MAHlB,2CAAH,sDAQZI,EAAW,uCAAG,WAAMC,GAAN,eAAArB,EAAA,sEACFH,EAAQ,aADN,cACnByB,EADmB,yBAGlBA,EAASJ,QAAO,SAAAK,GAAO,OAAIA,EAAQF,SAAWA,MAH5B,2CAAH,sDAMXG,EAAc,SAAAD,GAAO,OFJRhB,EEI8BgB,EFHtD1B,EEGyC,YFH5B,CACX4B,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBpB,KAAMqB,KAAKC,UAAUrB,KANL,IAAMA,GEMbsB,EAAgB,SAAAC,GAAS,OFIhBhC,EEJ2B,aAAD,OAAcgC,GFIjCjC,EAAQC,EAAK,CAAE2B,OAAQ,WAA9B,IAAA3B,GGnBTiC,EAAY,SAAC,GAKnB,IAJLf,EAII,EAJJA,OACAgB,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WACI,EACsBC,mBAAS,IAD/B,mBACGlB,EADH,KACUmB,EADV,KAaJ,OAVAC,qBAAU,WACHrB,EAIHD,EAAaC,GACVsB,KAAKF,GAJRtB,IACGwB,KAAKF,KAKT,CAACpB,IAGF,yBAAKuB,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBACXtB,EAAMuB,KAAI,SAAArB,GAAI,OACb,wBACEoB,UAAU,kBACVE,IAAKtB,EAAKP,IAEV,6BACE,qCAEGO,EAAKH,OAFR,WAKCG,EAAKuB,OAAS,YAGhBvB,EAAKP,KAAOsB,EAET,4BACES,KAAK,SACLJ,UAAU,2BACVK,QAASX,GAHX,SASA,4BACEU,KAAK,SACLJ,UAAU,2BACVK,QAAS,kBAAMZ,EAAOb,EAAKP,MAH7B,eAgBhBmB,EAAUc,aAAe,CACvBX,WAAY,KACZlB,OAAQ,M,0DCnEG8B,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACP3C,KAAM,IAJV,EAOE4C,eAAiB,SAACC,GAAW,IAAD,EACFA,EAAMC,OAAtBJ,EADkB,EAClBA,KAAMK,EADY,EACZA,MAEd,EAAKC,SAAL,eACGN,EAAOK,KAXd,EAeEE,aAAe,SAACJ,GAAW,IAAD,EACM,EAAKJ,MAA3BC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAAO3C,EADG,EACHA,KAErB6C,EAAMK,iBAEN,EAAKC,MAAMjC,YAAY,CACrBwB,OACAC,QACA3C,SAGF,EAAKgD,SAAS,CACZN,KAAM,GACNC,MAAO,GACP3C,KAAM,MA7BZ,4CAiCE,WACE,OACE,0BACEiC,UAAU,iBACVmB,SAAUC,KAAKJ,cAEf,yBAAKhB,UAAU,cACb,2BACEI,KAAK,OACLK,KAAK,OACLK,MAAOM,KAAKZ,MAAMC,KAClBY,YAAY,YACZrB,UAAU,wBACVsB,SAAUF,KAAKT,eACfY,UAAQ,KAIZ,yBAAKvB,UAAU,cACb,2BACEI,KAAK,OACLK,KAAK,QACLK,MAAOM,KAAKZ,MAAME,MAClBW,YAAY,aACZrB,UAAU,wBACVsB,SAAUF,KAAKT,eACfY,UAAQ,KAIZ,yBAAKvB,UAAU,cACb,8BACES,KAAK,OACLK,MAAOM,KAAKZ,MAAMzC,KAClBsD,YAAY,oBACZrB,UAAU,wBACVsB,SAAUF,KAAKT,eACfY,UAAQ,KAIZ,4BACEnB,KAAK,SACLJ,UAAU,wCAFZ,sBA1ER,GAAoCwB,IAAMC,YCQ7BC,G,MAAc,SAAC,GAAgB,IAAd5C,EAAa,EAAbA,OAAa,EACjBc,mBAAS,IADQ,mBAClChB,EADkC,KAC5B+C,EAD4B,OAET/B,mBAAS,MAFA,mBAElCb,EAFkC,KAExB6C,EAFwB,OAGOhC,oBAAS,GAHhB,mBAGlCiC,EAHkC,KAGhBC,EAHgB,KAKzChC,qBAAU,YHPkB,SAAAhB,GAAM,OAAIxB,EAAQ,UAAD,OAAWwB,KGQtDiD,CAAejD,GACZiB,KAAK4B,GAER9C,EAAYC,GACTiB,KAAK6B,KACP,CAAC9C,IAqBJ,OACE,yBAAKkB,UAAU,eACb,6CAEA,6BAASA,UAAU,qBACjB,2BAAIpB,EAAKb,MAAQ,mBAGnB,6BAASiC,UAAU,yBACjB,4BACEI,KAAK,SACLJ,UAAU,SACVK,QA/BqB,WAC3ByB,GAAqBD,KA2BjB,YAMG9C,GAAYA,EAASiD,OANxB,iBASA,wBAAIhC,UAAU,qBAEX6B,GAAoB9C,GAAYA,EAASkB,KAAI,SAAAjB,GAAO,OACnD,wBAAIgB,UAAU,yBAAyBE,IAAKlB,EAAQX,IAClD,4BACE+B,KAAK,SACLJ,UAAU,oCACVK,QAAS,kBAxCOd,EAwCoBP,EAAQX,GAvCxDiB,EAAcC,QAEdqC,GAAY,SAAAzD,GAAQ,OAAIA,EACrBQ,QAAO,SAAAK,GAAO,OAAIA,EAAQX,KAAOkB,QAJT,IAACA,IAqClB,KAOA,2BAAIP,EAAQjB,YAMpB,iCACE,yBAAKiC,UAAU,6BACb,kBAAC,EAAD,CAAgBf,YA7CF,SAACjB,GACrBiB,EAAY,2BACPjB,GADM,IAETc,YAECiB,MAAK,SAAAkC,GAAU,OAAIL,GAAY,SAAAzD,GAAQ,4BAAQA,GAAR,CAAkB8D,kBA+ChEP,EAAYpB,aAAe,CACzBxB,OAAQ,MChFV,IAyEeoD,EAzEH,WAAO,IAAD,EACUtC,mBAAS,MADnB,mBACTuC,EADS,KACFC,EADE,OAE4BxC,mBAAS,IAFrC,mBAETyC,EAFS,KAEOC,EAFP,OAG4B1C,mBAAS,MAHrC,mBAGT2C,EAHS,KAGOC,EAHP,KAKhB1C,qBAAU,WACR7B,IACG8B,KAAKqC,KACP,IAeH,OACE,yBAAKpC,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,yBACEA,UAAWyC,IACT,SACA,CAAE,aAAwB,OAAVN,KAGlB,4BACErB,MAAOuB,EACPf,SA3BY,SAACV,GACvB0B,EAAkB1B,EAAMC,OAAOC,OAC/B0B,EAAkB,QA2BR,4BAAQ1B,MAAM,KAAd,aAECqB,GAASA,EAAMlC,KAAI,SAAAyC,GAAI,OACtB,4BACE5B,MAAO4B,EAAKrE,GACZ6B,IAAKwC,EAAKrE,IAETqE,EAAKjC,aASlB,0BAAMT,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEvB,OAAQkE,OAAON,GACf5C,OA5Ce,SAACX,GACxB0D,EAAkB1D,IA4CVY,QAzCiB,WACzB8C,EAAkB,OAyCV7C,WAAY4C,KAIhB,yBAAKvC,UAAU,gBACZuC,GAAkB,kBAAC,EAAD,CAAazD,OAAQyD,QCtElDK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.724966c7.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  const body = await response.json();\n\n  return body.data || body;\n};\n\nexport const save = (url, data) => (\n  request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n);\n\nexport const remove = url => request(url, { method: 'DELETE' });\n","import { request } from './api';\n\nexport const getUsers = async() => (\n  (await request('/users'))\n    .sort((previous, next) => previous.id - next.id)\n    .slice(0, 5)\n);\n","import { request, save, remove } from './api';\n\nexport const getPosts = () => request('/posts');\n\nexport const getUserPosts = async(userId) => {\n  const posts = await getPosts();\n\n  return posts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n\nexport const getComments = async(postId) => {\n  const comments = await request('/comments');\n\n  return comments.filter(comment => comment.postId === postId);\n};\n\nexport const saveComment = comment => save('/comments', comment);\n\nexport const deleteComment = commentId => remove(`/comments/${commentId}`);\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getPosts, getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  userId,\n  onOpen,\n  onClose,\n  selectedId,\n}) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    if (!userId) {\n      getPosts()\n        .then(setPosts);\n    } else {\n      getUserPosts(userId)\n        .then(setPosts);\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]: &nbsp;\n              </b>\n              {post.title || 'No title'}\n            </div>\n\n            {post.id === selectedId\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={onClose}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => onOpen(post.id)}\n                >\n                  Open\n                </button>\n              )\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.defaultProps = {\n  selectedId: null,\n  userId: null,\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number,\n  onOpen: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  selectedId: PropTypes.number,\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewCommentForm extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    body: '',\n  }\n\n  handleOnChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    const { name, email, body } = this.state;\n\n    event.preventDefault();\n\n    this.props.saveComment({\n      name,\n      email,\n      body,\n    });\n\n    this.setState({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"NewCommentForm\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"form-field\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Your name\"\n            className=\"NewCommentForm__input\"\n            onChange={this.handleOnChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            placeholder=\"Your email\"\n            className=\"NewCommentForm__input\"\n            onChange={this.handleOnChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <textarea\n            name=\"body\"\n            value={this.state.body}\n            placeholder=\"Type comment here\"\n            className=\"NewCommentForm__input\"\n            onChange={this.handleOnChange}\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"NewCommentForm__submit-button button\"\n        >\n          Add a comment\n        </button>\n      </form>\n    );\n  }\n}\n\nNewCommentForm.propTypes = {\n  saveComment: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport {\n  getPostDetails,\n  getComments,\n  deleteComment,\n  saveComment,\n} from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState(null);\n  const [isVisibleComment, setIsVisibleComment] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(setPost);\n\n    getComments(postId)\n      .then(setComments);\n  }, [postId]);\n\n  const switchCommentHandler = () => {\n    setIsVisibleComment(!isVisibleComment);\n  };\n\n  const deleteCommentHandler = (commentId) => {\n    deleteComment(commentId);\n\n    setComments(previous => previous\n      .filter(comment => comment.id !== commentId));\n  };\n\n  const addNewComment = (data) => {\n    saveComment({\n      ...data,\n      postId,\n    })\n      .then(newComment => setComments(previous => [...previous, newComment]));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body || 'No description'}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={switchCommentHandler}\n        >\n          Hide &nbsp;\n          {comments && comments.length}\n          &nbsp; comments\n        </button>\n        <ul className=\"PostDetails__list\">\n\n          {isVisibleComment && comments && comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => deleteCommentHandler(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm saveComment={addNewComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.defaultProps = {\n  postId: null,\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport classNames from 'classnames';\nimport { getUsers } from './api/users';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [users, setUsers] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  useEffect(() => {\n    getUsers()\n      .then(setUsers);\n  }, []);\n\n  const onChangeHandler = (event) => {\n    setSelectedUserId(event.target.value);\n    setSelectedPostId(null);\n  };\n\n  const setPostIdHandler = (postId) => {\n    setSelectedPostId(postId);\n  };\n\n  const unsetPostIdHandler = () => {\n    setSelectedPostId(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <div\n            className={classNames(\n              'select',\n              { 'is-loading': users === null },\n            )}\n          >\n            <select\n              value={selectedUserId}\n              onChange={onChangeHandler}\n            >\n              <option value=\"0\">All users</option>\n\n              {users && users.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))\n              }\n            </select>\n          </div>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={Number(selectedUserId)}\n            onOpen={setPostIdHandler}\n            onClose={unsetPostIdHandler}\n            selectedId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && <PostDetails postId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}